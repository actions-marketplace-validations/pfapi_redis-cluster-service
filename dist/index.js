(()=>{var e={454:e=>{e.exports=`\n[Unit]\nDescription=Redis Cluster Service\n\n[Service]\nType=oneshot\nExecStart=systemctl start redis-7000 ; systemctl start redis-7001 ; systemctl start redis-7002 ; systemctl start redis-7003 ; systemctl start redis-7004 ; systemctl start redis-7005\nRestart=systemctl restart redis-7000 ; systemctl restart redis-7001 ; systemctl restart redis-7002 ; systemctl restart redis-7003 ; systemctl restart redis-7004 ; systemctl restart redis-7005\nExecStop=systemctl stop redis-7000 ; systemctl stop redis-7001 ; systemctl stop redis-7002 ; systemctl stop redis-7003 ; systemctl stop redis-7004 ; systemctl stop redis-7005\nRemainAfterExit=yes\n\n[Install]\nWantedBy=multi-user.target\n`},46:(e,s,t)=>{"use strict";const r=t(17);const n=t(147);const i=t(37);const{execSync:c}=t(81);const o=`\n#!/bin/bash\n\nset -e\n\ncurl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg\n\necho "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list\n\nsudo apt-get update -y\n\nsudo apt-get install redis -y\n\nsudo sed -i 's/protected-mode yes/protected-mode no/' /etc/redis/redis.conf\n`;e.exports=()=>{const e=r.join(i.tmpdir(),"install-redis.sh");n.writeFileSync(e,o);n.chmodSync(e,"755");c(e,{stdio:"inherit"});n.unlinkSync(e)}},892:e=>{e.exports=e=>`\nbind 0.0.0.0\nprotected-mode no\nport ${e}\ntcp-backlog 511\ntimeout 0\ntcp-keepalive 300\ndaemonize yes\nsupervised auto\npidfile /run/redis/redis-server-${e}.pid\nloglevel notice\nlogfile /var/log/redis/redis-server-${e}.log\ndatabases 16\nalways-show-logo no\nset-proc-title yes\nproc-title-template "{title} {listen-addr} {server-mode}"\nstop-writes-on-bgsave-error yes\nrdbcompression yes\nrdbchecksum yes\ndbfilename dump.rdb\nrdb-del-sync-files no\ndir /var/lib/redis\nreplica-serve-stale-data yes\nreplica-read-only yes\nrepl-diskless-sync yes\nrepl-diskless-sync-delay 5\nrepl-diskless-sync-max-replicas 0\nrepl-diskless-load disabled\nrepl-disable-tcp-nodelay no\nreplica-priority 100\nacllog-max-len 128\njemalloc-bg-thread yes\ncluster-enabled yes\ncluster-config-file nodes-${e}.conf\ncluster-node-timeout 5000\nappendonly yes`},919:e=>{e.exports=e=>`\n[Unit]\nDescription=Advanced key-value store\nAfter=network.target\nDocumentation=http://redis.io/documentation, man:redis-server(1)\n\n[Service]\nType=notify\nExecStart=/usr/bin/redis-server /etc/redis/${e}.conf\nExecStop=/bin/kill -s TERM $MAINPID\nPIDFile=/run/redis/redis-server-${e}.pid\nTimeoutStopSec=0\nRestart=always\nUser=redis\nGroup=redis\nRuntimeDirectory=redis\nRuntimeDirectoryMode=2755\n\nUMask=007\nPrivateTmp=yes\nLimitNOFILE=65535\nPrivateDevices=yes\nProtectHome=yes\nReadOnlyDirectories=/\nReadWriteDirectories=-/var/lib/redis\nReadWriteDirectories=-/var/log/redis\nReadWriteDirectories=-/run/redis\n\nNoNewPrivileges=true\nCapabilityBoundingSet=CAP_SETGID CAP_SETUID CAP_SYS_RESOURCE\nRestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX\nMemoryDenyWriteExecute=true\nProtectKernelModules=true\nProtectKernelTunables=true\nProtectControlGroups=true\nRestrictRealtime=true\nRestrictNamespaces=true\n\n# redis-server can write to its own config file when in cluster mode so we\n# permit writing there by default. If you are not using this feature, it is\n# recommended that you replace the following lines with "ProtectSystem=full".\nProtectSystem=true\nReadWriteDirectories=-/etc/redis\n\n[Install]\nWantedBy=multi-user.target\nAlias=redis.service`},316:(e,s,t)=>{"use strict";const r=t(147);const n=t(37);const i=t(17);const{execSync:c}=t(81);const o=t(892);const d=t(919);const l=t(454);const a=n.tmpdir();const u=`\n#!/bin/bash\n\nset -e\n\nsudo mv ${a}/7*.conf /etc/redis\n\nsudo mv ${a}/redis-*.service /lib/systemd/system\n\nsudo systemctl start redis-cluster.service\n\nredis-cli --cluster create 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 --cluster-replicas 1 --cluster-yes\n\nredis-cli --cluster check 127.0.0.1:7000\n\nsudo systemctl stop redis-cluster.service\n`;e.exports=()=>{for(let e=7e3;e<7006;e++){r.writeFileSync(i.join(a,`${e}.conf`),o(e));r.writeFileSync(i.join(a,`redis-${e}.service`),d(e))}r.writeFileSync(i.join(a,"redis-cluster.service"),l);const e=i.join(n.tmpdir(),"setup-cluster.sh");r.writeFileSync(e,u);r.chmodSync(e,"755");c(e,{stdio:"inherit"});r.unlinkSync(e)}},81:e=>{"use strict";e.exports=require("child_process")},147:e=>{"use strict";e.exports=require("fs")},37:e=>{"use strict";e.exports=require("os")},17:e=>{"use strict";e.exports=require("path")}};var s={};function __nccwpck_require__(t){var r=s[t];if(r!==undefined){return r.exports}var n=s[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete s[t]}return n.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var t={};(()=>{"use strict";const{execSync:e}=__nccwpck_require__(81);const s=__nccwpck_require__(46);const t=__nccwpck_require__(316);(async()=>{try{s();t();e("redis-server -v",{stdio:"inherit"})}catch(e){console.log(e.message);process.exit(1)}})()})();module.exports=t})();